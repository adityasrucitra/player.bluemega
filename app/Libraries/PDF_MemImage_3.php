<?php
namespace App\Libraries;

use Fpdf\Fpdf;

class PDF_MemImage_3 extends Fpdf
{
    public $options;

    public function __construct($orientation = 'P', $unit = 'mm', $size = 'A4', $options = [])
    {
        parent::__construct($orientation, $unit, $size);
        $this->options = $options;
        // Register var stream protocol
        $existed = in_array('var', stream_get_wrappers());
        if ($existed) {
            stream_wrapper_unregister('var');
        }
        stream_wrapper_register('var', 'App\Libraries\VariableStream');
    }

    public function MemImage($data, $x = null, $y = null, $w = 0, $h = 0, $link = '')
    {
        // Display the image contained in $data
        $v = 'img' . md5($data);
        $GLOBALS[$v] = $data;
        $a = getimagesize('var://' . $v);
        if (!$a) {
            $this->Error('Invalid image data');
        }
        $type = substr(strstr($a['mime'], '/'), 1);
        $this->Image('var://' . $v, $x, $y, $w, $h, $type, $link);
        unset($GLOBALS[$v]);
    }

    public function GDImage($im, $x = null, $y = null, $w = 0, $h = 0, $link = '')
    {
        // Display the GD image associated with $im
        ob_start();
        imagepng($im);
        $data = ob_get_clean();
        $this->MemImage($data, $x, $y, $w, $h, $link);
    }

    // Page header
    public function Header()
    {
        // Logo
        $this->Ln(20);
        $logo = file_get_contents(base_url('asset/img/bm-logo.png'));
        $this->MemImage($logo, $this->GetX(), 10, 30, 30);
        // Arial bold 15
        $this->SetFont('Arial', 'B', 16);
        //Text color = Red
        $this->SetTextColor(255, 0, 0);
        // Move to the right
        $this->Cell(40); //$this->Ln();
        $this->SetY($this->GetY() - 15, false);
        $this->SetX($this->GetX() - 5);
        // Title
        $this->Cell(0, 10, 'DATA COMPLETENESS OF', 0, 2, 'L', false);
        $this->Cell(0, 10, $this->options['company_name'], 0, 2, 'L', false);
        //Text color = Black
        $this->SetTextColor(0, 0, 0);
        // Arial bold 15
        $this->SetFont('Times', 'I', 10);
        // Sub title
        $this->Cell(0, 10, 'Analysed data from ' . $this->options['from'] . ' to ' . $this->options['to'] . " ({$this->options['timezone']})", 0, 2, 'L');
        $this->Ln(2);
        //Draw line
        $this->SetLineWidth(0.4);
        $this->Line($this->GetX(), $this->GetY(), $this->GetPageWidth() - 15, $this->GetY());
        // Line break
        $this->Ln(4);
    }

    // Page footer
    public function Footer()
    {
        // Position at 1.5 cm from bottom
        $this->SetY(-15);
        // Draw Line
        $this->SetDrawColor(0, 0, 0);
        $this->Line($this->GetX(), $this->GetY(), $this->GetPageWidth() - 5, $this->GetY());
        // Arial italic 8
        $this->SetFont('Arial', 'I', 8);
        // Page number
        $this->SetTextColor(0, 0, 0);
        $this->Cell(0, 10, 'Report generated by: BlueMega based on available data @' . date('D M j G:i:s T Y') . ' Page ' . $this->PageNo() . '/{nb}', 0, 2, 'L');
        // Draw Line
        $this->Line($this->GetX(), $this->GetY(), $this->GetPageWidth() - 5, $this->GetY());
    }

    public function Footer2()
    {
        // Go to 1.5 cm from bottom
        $this->SetY(-15);
        // Select Arial italic 8
        $this->SetFont('Arial', 'I', 8);
        // Print centered page number
        $this->Cell(0, 10, 'Page ' . $this->PageNo(), 0, 0, 'C');
    }

    public function subWrite($h, $txt, $link = '', $subFontSize = 12, $subOffset = 0)
    {
        // resize font
        $subFontSizeold = $this->FontSizePt;
        $this->SetFontSize($subFontSize);

        // reposition y
        $subOffset = ((($subFontSize - $subFontSizeold) / $this->k) * 0.3) + ($subOffset / $this->k);
        $subX = $this->x;
        $subY = $this->y;
        $this->SetXY($subX, $subY - $subOffset);

        //Output text
        $this->Write($h, $txt, $link);

        // restore y position
        $subX = $this->x;
        $subY = $this->y;
        $this->SetXY($subX, $subY + $subOffset);

        // restore font size
        $this->SetFontSize($subFontSizeold);
    }
}
